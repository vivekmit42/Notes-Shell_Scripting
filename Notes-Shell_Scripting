----------------------------------------------------------------------------------------------------------------------
To check which bash you are using

    #echo $0

-------------------------------------------------------------------------------------------------------------------------
What is SHEBANG?

    #!/bin/bash

*above line is called shebang
*when a operating system is runs a scripts, then which shell will be used to execute the scripts is defined in this shebang line.
*It is not mandatory to specify in the script but it best practice standard.
--------------------------------------------------------------------------------------------------------------------------
echo "Text to print"                        --------- Printing output to terminal
--------------------------------------------------------------------------------------------------------------------------
How to run a script

*Make sure script has executable permission (rwx)
*Run using these commands:
    #./script.sh
    #./path/script.sh                                           --- this require rwx permission
    #bash script.sh                                             --- it will directly excute script without rwx permission

Ctrl+C to terminate
Ctrl+z to stop

-----------------------------------------------------------------------------------------------------------------------

First Basic Script

#!/bin/bash
echo "Hello this is my first script"

------------------------------------------------------------------------------------------------------------------------

What are variables?

It is the box which is used to assign a value like x=10, here x is a variable which is holding value 10.


In Shell scripting, we use variable in following manner

VAR_NAME=value
VAR_NAME=$(hostname)

echo $VAR_NAME

CONSTANT VARIABLE

Variable which you cant change after declaring

readonly var_name="Hi"

--------------------------------------------------------------------------------------------------------------------------

ARRAY

How to define an array?

myarray=(1 2 Hello "hey Man")

How to get values from an array?

echo "${myarray[0]}"

echo "${myarray[1]}"

-------------------------------------------------------------------------------------------------------------------------

ARRAY

How to find no of values in an array

echo " no of values, length of an array is ${#myarray[*]}"

How to jump between values 

myarray[*]:startingindexvalue:how many value you want
like 

myarray=(1 2 Hello "hey Man" 55 66 8888)

echo "printing array myarray[*]:2:3"

How to update/insert new value into array

myarray+=(New best GGN)

-----------------------------------------------------------------------------------------------------------------------

ARRAY KEY-VALUE PAIR

declare - A myarray
myarray=([name]=Paul [age]=20)

echo "${myarray[name]}"

-----------------------------------------------------------------------------------------------------------------------

String Operations

myvar="Hey Buddy, How are you?"

How to find out variable length?

myvarlength=${#myvar}

echo "Length of the myvariable is $myvarlength"

How to convert string into UPPER CASE?

echo "UPPER CASE is ${myvar^^}"

How to convert String into LOWER CASE?

echo "LOWER CASE is ${myvar,,}"

How to do slice string?

myvar="Hey Buddy, How are you?"

slice=${myvar:6:11}

echo "SLICING is $slice "

----------------------------------------------------------------------------------------------------------------------
USER INTERACTION

Take input from user

    read <var_name>
    read -p "Your name is" namevar
    echo "namevar"

-------------------------------------------------------------------------------------------------------------------------

Arithmetic

two methods available:

        1. using let method
            like:
                    a=100
                    let b=a*100
                    echo "$b"

                    example 1:
                    #!/bin/bash
                        read -p "What is your name?" name
                        read -p "what is your age?" age
                        read -p "What is your monthly salary today?" msal

                        let a=msal*40*12

                        echo "Hi $name, as per your age$age, your life time earning as per your today's salary will be:$a"

        2. using double bracket
            like:
                    ((a++))
                    ((a=5*100))

                    example 1:
                    
                        read -p "What is your name?" name
                        read -p "what is your age?" age
                        read -p "What is your monthly salary today?" msal

                        echo "Hi $name, as per your age$age, your life time earning as per your today's salary will be:$(($msal*40*12))"

-------------------------------------------------------------------------------------------------------------------------------------------------

CONDITIONAL STATEMENT

1. IF ELSE CONDITION:

read -p " Hi what is your marks in mathematics:  " math

if [[ $math -ge  33 ]]
then
        echo " You are Pass!"
else
        echo " You are Failed!!!"
fi

2. ELIF (IF ELSE NESTED CONDITION):

                read -p "How many marks you got in maths??" math

                if [[ $math -lt 33  ]]
                then
                        echo " You FAILED!!"
                elif [[ $math -lt 60  ]]
                then
                        echo " You got Second Division"
                elif [[ $math -lt 99  ]]
                then
                        echo "You got First Division!!!!!!"
                elif [[  $math -ge 99  ]]
                then
                        echo "You are a topper"
                fi

3. CASE

                    #!/bin/bash
                    #CASE CONCEPT

                    echo "BASIC LINUX OPERATIONS"

                    echo "a = To know what is today's date"
                    echo "b = To know your os name & details"
                    echo "c = To know your uptime"
                    echo "d = To check disk management"

                    read choice

                    case $choice in
                            a) date;;
                            b) cat /etc/os-release;;
                            c) uptime;;
                            d)
                                    df -hT

                                    echo " looking for fdisk"

                                    fdisk -l;;

                            *) echo "Please provide correct input"
                    esac

---------------------------------------------------------------------------------------------------------------------

LOGICAL OPERATORS (AND , OR , NOT)      && , || , !

condition1 && condition2        -- If both conditions are true then true otherwise false

condition1 || condition2        -- If any of the condition is true then it is true

condition1!                     -- If condition1 is true then it is false and vice versa

----------------------------------------------------------------------------------------------------------------------

EQUAL                                   -eq(for numeric values)  OR ==(for string values)
GREATER THAN EQUAL TO                   -ge
LESS THAN EQUAL TO                      -le
NOT EQUAL TO                            -ne  OR !=
GREATER THAN                            -gt
LESS THAN                               -lt

------------------------------------------------------------------------------------------------------------------------

USE CONDITIONAL OPERATOR IF ELSE IN SHORT FORM

                                        read -p "What's your age?" age

                                        [[ $age -ge 18 ]] && echo "Adult" || echo "Minor"

--------------------------------------------------------------------------------------------------------------------------

LOOPS

1. for loop

                        Example 1:
                            for i in {1..30}
                            do
                                    echo "$i"
                            done

                            for name in ram shyam raju maju monu sonu
                            do
                                    echo "Name is $name"

                            done
                        Example 2:
                            myarray=( 1 2 3 4 5 6 7 8 9 q w e r t y u i )

                            length=${#myarray[*]}
                            for (( i=0;i<$length;i++))
                            do
                                    echo " Value of my array is ${myarray[$i]}"
                            done
